syntax = "proto3";

package users;

option go_package = "github.com/CrispyCl/testprotos/gen/go/users;usersv1";

// Users service for managing user accounts
service Users {
    // Registers a new user
    rpc Register (RegisterRequest) returns (RegisterResponse);

    // Retrieves user information by email
    rpc GetUserByEmail (GetUserByEmailRequest) returns (GetUserResponse);

    // Retrieves information about the currently authenticated user
    rpc GetUserMy (EmptyRequest) returns (GetUserResponse);

    // Verifies whether the provided password is correct for the given email
    rpc CheckPassword (CheckPasswordRequest) returns (SuccessResponse);

    // Update "last seen" timestamp of the currently aunthenticated user
    rpc UpdateLastSeen (EmptyRequest) returns (EmptyResponse);
}

// Request message for registering a new user
message RegisterRequest {
    // User email
    string email = 1;

    // User password (should be stored as a hash)
    string password = 2;

    // User role
    UserRole role = 3;
}

// Response message after successful registration
message RegisterResponse {
    // Unique user ID
    int64 user_id = 1;
}

// Request for retrieving user by email
message GetUserByEmailRequest {
    // User email
    string email = 1;
}

// Response message with user information
message GetUserResponse {
    // Unique user ID
    int64 user_id = 1;

    // User email
    string email = 2;

    // User role
    UserRole role = 3;
}

// Request message for password verification
message CheckPasswordRequest {
    // User email
    string email = 1;

    // Password to verify
    string password = 2;
}

// Empty request (used when no parameters are needed)
message EmptyRequest { }

// Empty response (used when no data is returned)
message EmptyResponse { }

// Response message indicating whether an operation was successful
message SuccessResponse {
    // Success flag
    bool success = 1;
}

// User role definitions
enum UserRole {
    // Unspecified role
    USER_ROLE_UNSPECIFIED = 0; 

    // Regular user
    USER_ROLE_USER        = 1;

    // Manager (extended privileges)
    USER_ROLE_MANAGER     = 2;

    // Admin (full access)
    USER_ROLE_ADMIN       = 3;
}